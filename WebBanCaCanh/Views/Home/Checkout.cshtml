@model WebBanCaCanh.ViewModels.CheckoutViewModel

@{
    Layout = null;
    ViewBag.Title = "Checkout";
    var cart = Session["Cart"] as List<WebBanCaCanh.Models.OrderDetail>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title - Huy Phuc Aquarium</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body {
            background-color: #fff;
        }

        .form-label {
            font-weight: 600;
        }

        .form-control {
            border-radius: 4px;
            margin-bottom: 15px;
        }

        .form-check-label {
            margin-left: 10px;
        }

        .btn-order {
            background-color: #ff5722;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .btn-order:hover {
                background-color: #e64a19;
            }

        .order-summary {
            background-color: #f8f8f8;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        }

            .order-summary table {
                width: 100%;
                margin-bottom: 0;
            }

            .order-summary th, .order-summary td {
                padding: 10px;
                text-align: left;
            }

            .order-summary th {
                background-color: #e8e8e8;
                font-weight: 600;
            }

        .cart-item-img {
            max-width: 80px;
            border-radius: 5px;
            margin-right: 10px;
        }

        .text-end {
            text-align: right !important;
        }

        .checkout-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .checkout-header img {
                max-height: 80px;
            }

        .shipping-info {
            margin-top: 20px;
        }

        .checkout-footer {
            margin-top: 20px;
            padding: 10px 0;
            border-top: 1px solid #ddd;
        }

        .discount-section {
            display: flex;
            align-items: center;
        }

            .discount-section input {
                margin-right: 10px;
            }

        .payment-method-section {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

            .payment-method-section .form-check {
                margin-right: 20px;
            }

        .order-notes {
            background-color: #fff3cd;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container my-3">
        <div class="checkout-header">
            <img src="~/Content/Images/logo-horizontal.png" alt="Logo" height="50">
        </div>
        @using (Html.BeginForm("Checkout", "Home", FormMethod.Post, new { id = "checkoutForm" }))
        {
            <div class="row">
                <!-- Left Column for Customer Info -->
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CustomerName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.City, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.District, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.District, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Note, new { @class = "form-label" })
                        @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label class="form-label">Phương thức thanh toán</label>
                        <div class="payment-method-section">
                            <div class="form-check">
                                @Html.RadioButtonFor(m => m.PaymentMethod, "COD", new { @class = "form-check-input", id = "COD" })
                                <label class="form-check-label" for="COD">Thanh toán khi giao hàng (COD)</label>
                            </div>
                        </div>
                    </div>
               
                </div>
                <!-- Right Column for Order Summary -->
                <div class="col-md-6">
                    <h3 class="checkout-title">Đơn hàng <span>(@cart.Count sản phẩm)</span></h3>
                    <div class="order-summary">
                        @if (cart != null && cart.Count > 0)
                        {
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Sản phẩm</th>
                                        <th>Số lượng</th>
                                        <th>Giá</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in cart)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @{
                                                        var firstImage = item.Product.ProductImages?.FirstOrDefault();
                                                        var imageUrl = firstImage != null ? firstImage.ImageUrl : "placeholder.png";
                                                    }
                                                    <img src="/Content/Images/@imageUrl" alt="@item.Product.ProductName" class="cart-item-img" />
                                                    <span>@item.Product.ProductName</span>
                                                </div>
                                            </td>
                                            <td>@item.Quantity</td>
                                            <td>@String.Format("{0:#,###}đ", item.UnitPrice * item.Quantity)</td>
                                        </tr>
                                    }
                                    <tr>
                                        <td colspan="2" class="text-end"><strong>Tổng tiền</strong></td>
                                        <td>@String.Format("{0:#,###}đ", cart.Sum(item => item.UnitPrice * item.Quantity))</td>
                                    </tr>
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p>Không có sản phẩm trong giỏ hàng của bạn.</p>
                        }
                    </div>
                    <div class="checkout-footer">
                        <div class="d-flex justify-content-between">
                            <span>Tạm tính</span>
                            <strong>@String.Format("{0:#,###}đ", cart.Sum(item => item.UnitPrice * item.Quantity))</strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Phí vận chuyển</span>
                            <strong>-</strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Tổng cộng</span>
                            <strong>@String.Format("{0:#,###}đ", cart.Sum(item => item.UnitPrice * item.Quantity))</strong>
                        </div>
                    </div>
                    <div class="form-group text-end">
                        <button type="submit" class="btn btn-order">Xác nhận đơn hàng</button>
                    </div>
                </div>
            </div>
            <div class="order-notes">
                <p>👉 Đơn hàng của bạn sau khi được xác nhận qua tin nhắn tại Fanpage: Trại Cá Cảnh Huy Phúc, shop sẽ tiến hành bắt cá và chọn lọc (12 tiếng). Cá ổn định được đóng bọc, bơm oxy và đóng gói bằng thùng xốp để đảm bảo nhiệt và chống shock.</p>
                <p>👉 Đơn vị vận chuyển sẽ giao tới tận nhà bạn sau 1-2 ngày tùy vùng.</p>
                <p>👉 Khi nhận hàng bạn vui lòng quay clip kiểm tra từ lúc mở thùng và kiểm cá để shop có cơ sở hoàn tiền hoặc gửi bù cá nếu có hư hao.</p>
                <p>👉 Cảm ơn bạn đã quan tâm và ủng hộ sản phẩm của shop 😘</p>
            </div>
        }
    </div>
</body>
</html>
